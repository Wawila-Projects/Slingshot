State 211 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: translation_unit

    2 primary_expression: ID
    3                   | INT_VAL
    4                   | CHAR_VAL
    5                   | '(' expression ')'

    6 postfix_expression: primary_expression
    7                   | ID '[' expression ']'
    8                   | ID '(' ')'
    9                   | ID '(' argument_list ')'
   10                   | postfix_expression INC
   11                   | postfix_expression DEC

   12 argument_list: expression_list

   13 unary_expression: postfix_expression
   14                 | INC unary_expression
   15                 | DEC unary_expression
   16                 | '-' unary_expression
   17                 | '~' unary_expression
   18                 | '!' unary_expression
   19                 | SIZEOF unary_expression
   20                 | SIZEOF '(' type_name ')'
   21                 | RAND '(' ')'
   22                 | TIME '(' INT_VAL ')'

   23 multiplicative_expression: unary_expression
   24                          | multiplicative_expression '*' unary_expression
   25                          | multiplicative_expression '/' unary_expression
   26                          | multiplicative_expression '%' unary_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression '+' multiplicative_expression
   29                    | additive_expression '-' multiplicative_expression

   30 shift_expression: additive_expression
   31                 | shift_expression LS additive_expression
   32                 | shift_expression RS additive_expression

   33 relational_expression: shift_expression
   34                      | relational_expression '<' shift_expression
   35                      | relational_expression '>' shift_expression
   36                      | relational_expression LE shift_expression
   37                      | relational_expression GE shift_expression

   38 equality_expression: relational_expression
   39                    | equality_expression EQ relational_expression
   40                    | equality_expression NE relational_expression

   41 and_expression: equality_expression
   42               | and_expression '&' equality_expression

   43 exclusive_or_expression: and_expression
   44                        | exclusive_or_expression '^' and_expression

   45 inclusive_or_expression: exclusive_or_expression
   46                        | inclusive_or_expression '|' exclusive_or_expression

   47 logical_and_expression: inclusive_or_expression
   48                       | logical_and_expression AND inclusive_or_expression

   49 logical_or_expression: logical_and_expression
   50                      | logical_or_expression OR logical_and_expression

   51 conditional_expression: logical_or_expression
   52                       | logical_or_expression '?' expression ':' conditional_expression

   53 assignment_expression: unary_expression '=' expression
   54                      | unary_expression PLE expression
   55                      | unary_expression SBE expression
   56                      | unary_expression MLE expression
   57                      | unary_expression DVE expression
   58                      | unary_expression MDE expression
   59                      | unary_expression RSE expression
   60                      | unary_expression LSE expression
   61                      | unary_expression XRE expression
   62                      | unary_expression ORE expression
   63                      | unary_expression ANE expression

   64 expression: assignment_expression
   65           | conditional_expression

   66 expression_list: expression
   67                | expression_list ',' expression

   68 declaration: type_specifier declarator_list ';'

   69 declarator_list: init_declarator
   70                | declarator_list ',' init_declarator

   71 init_declarator: declarator
   72                | declarator '=' initializer

   73 type_specifier: VOID
   74               | CHAR
   75               | INT

   76 type_name: type_specifier

   77 declarator: direct_declarator

   78 direct_declarator: ID
   79                  | ID '[' INT_VAL ']'
   80                  | ID '[' ']'
   81                  | ID '(' parameter_list ')'
   82                  | ID '(' ')'

   83 parameter_list: parameter_declaration
   84               | parameter_list ',' parameter_declaration

   85 parameter_declaration: type_specifier declarator
   86                      | type_specifier

   87 initializer: expression
   88            | '{' initializer_list '}'

   89 initializer_list: expression
   90                 | initializer_list ',' expression

   91 statement: optional_expression ';'
   92          | selection_statement
   93          | iteration_statement
   94          | jump_statement
   95          | compound_statement
   96          | built_in_func ';'

   97 built_in_func: SRAND '(' expression ')'
   98              | PRINTF '(' STRING_VAL ')'
   99              | PRINTF '(' STRING_VAL ',' expression_list ')'

  100 compound_statement: '{' '}'
  101                   | '{' statement_list '}'
  102                   | '{' declaration_list '}'
  103                   | '{' declaration_list statement_list '}'

  104 declaration_list: declaration
  105                 | declaration_list declaration

  106 statement_list: statement
  107               | statement_list statement

  108 optional_expression: expression
  109                    | %empty

  110 selection_statement: IF '(' expression ')' statement
  111                    | IF '(' expression ')' statement ELSE statement

  112 iteration_statement: WHILE '(' expression ')' statement
  113                    | FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement

  114 jump_statement: RETURN ';'
  115               | RETURN expression ';'

  116 translation_unit: external_declaration
  117                 | translation_unit external_declaration

  118 external_declaration: function_definition
  119                     | declaration

  120 function_definition: type_specifier declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'!' (33) 18
'%' (37) 26
'&' (38) 42
'(' (40) 5 8 9 20 21 22 81 82 97 98 99 110 111 112 113
')' (41) 5 8 9 20 21 22 81 82 97 98 99 110 111 112 113
'*' (42) 24
'+' (43) 28
',' (44) 67 70 84 90 99
'-' (45) 16 29
'/' (47) 25
':' (58) 52
';' (59) 68 91 96 113 114 115
'<' (60) 34
'=' (61) 53 72
'>' (62) 35
'?' (63) 52
'[' (91) 7 79 80
']' (93) 7 79 80
'^' (94) 44
'{' (123) 88 100 101 102 103
'|' (124) 46
'}' (125) 88 100 101 102 103
'~' (126) 17
error (256)
ID <string_t> (258) 2 7 8 9 78 79 80 81 82
INT_VAL <int_t> (259) 3 22 79
CHAR_VAL <char_t> (260) 4
IF (261) 110 111
ELSE (262) 111
FOR (263) 113
WHILE (264) 112
INT (265) 75
CHAR (266) 74
VOID (267) 73
RETURN (268) 114 115
SIZEOF (269) 19 20
LE (270) 36
GE (271) 37
NE (272) 40
EQ (273) 39
LS (274) 31
RS (275) 32
OR (276) 50
AND (277) 48
PLE (278) 54
SBE (279) 55
MLE (280) 56
DVE (281) 57
MDE (282) 58
RSE (283) 59
LSE (284) 60
DEC (285) 11 15
INC (286) 10 14
XRE (287) 61
ORE (288) 62
ANE (289) 63
STRING_VAL <string_t> (290) 98 99
PRINTF (291) 98 99
TIME (292) 22
SRAND (293) 97
RAND (294) 21


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
input (64)
    on left: 1, on right: 0
primary_expression <expression_t> (65)
    on left: 2 3 4 5, on right: 6
postfix_expression <expression_t> (66)
    on left: 6 7 8 9 10 11, on right: 10 11 13
argument_list <expression_list_t> (67)
    on left: 12, on right: 9
unary_expression <expression_t> (68)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 14 15 16 17 18
    19 23 24 25 26 53 54 55 56 57 58 59 60 61 62 63
multiplicative_expression <expression_t> (69)
    on left: 23 24 25 26, on right: 24 25 26 27 28 29
additive_expression <expression_t> (70)
    on left: 27 28 29, on right: 28 29 30 31 32
shift_expression <expression_t> (71)
    on left: 30 31 32, on right: 31 32 33 34 35 36 37
relational_expression <expression_t> (72)
    on left: 33 34 35 36 37, on right: 34 35 36 37 38 39 40
equality_expression <expression_t> (73)
    on left: 38 39 40, on right: 39 40 41 42
and_expression <expression_t> (74)
    on left: 41 42, on right: 42 43 44
exclusive_or_expression <expression_t> (75)
    on left: 43 44, on right: 44 45 46
inclusive_or_expression <expression_t> (76)
    on left: 45 46, on right: 46 47 48
logical_and_expression <expression_t> (77)
    on left: 47 48, on right: 48 49 50
logical_or_expression <expression_t> (78)
    on left: 49 50, on right: 50 51 52
conditional_expression <expression_t> (79)
    on left: 51 52, on right: 52 65
assignment_expression <expression_t> (80)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 64
expression <expression_t> (81)
    on left: 64 65, on right: 5 7 52 53 54 55 56 57 58 59 60 61 62
    63 66 67 87 89 90 97 108 110 111 112 115
expression_list <expression_list_t> (82)
    on left: 66 67, on right: 12 67 99
declaration <statement_t> (83)
    on left: 68, on right: 104 105 119
declarator_list <statement_list_t> (84)
    on left: 69 70, on right: 68 70
init_declarator <statement_t> (85)
    on left: 71 72, on right: 69 70
type_specifier <int_t> (86)
    on left: 73 74 75, on right: 68 76 85 86 120
type_name <int_t> (87)
    on left: 76, on right: 20
declarator <statement_t> (88)
    on left: 77, on right: 71 72 85 120
direct_declarator <statement_t> (89)
    on left: 78 79 80 81 82, on right: 77
parameter_list <statement_list_t> (90)
    on left: 83 84, on right: 81 84
parameter_declaration <statement_t> (91)
    on left: 85 86, on right: 83 84
initializer <expression_t> (92)
    on left: 87 88, on right: 72
initializer_list <expression_list_t> (93)
    on left: 89 90, on right: 88 90
statement <statement_t> (94)
    on left: 91 92 93 94 95 96, on right: 106 107 110 111 112 113
built_in_func <statement_t> (95)
    on left: 97 98 99, on right: 96
compound_statement <statement_t> (96)
    on left: 100 101 102 103, on right: 95 120
declaration_list <statement_list_t> (97)
    on left: 104 105, on right: 102 103 105
statement_list <statement_list_t> (98)
    on left: 106 107, on right: 101 103 107
optional_expression <expression_t> (99)
    on left: 108 109, on right: 91 113
selection_statement <statement_t> (100)
    on left: 110 111, on right: 92
iteration_statement <statement_t> (101)
    on left: 112 113, on right: 93
jump_statement <statement_t> (102)
    on left: 114 115, on right: 94
translation_unit <statement_list_t> (103)
    on left: 116 117, on right: 1 117
external_declaration <statement_t> (104)
    on left: 118 119, on right: 116 117
function_definition <statement_t> (105)
    on left: 120, on right: 118


State 0

    0 $accept: . input $end
    1 input: . translation_unit
   68 declaration: . type_specifier declarator_list ';'
   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
  116 translation_unit: . external_declaration
  117                 | . translation_unit external_declaration
  118 external_declaration: . function_definition
  119                     | . declaration
  120 function_definition: . type_specifier declarator compound_statement

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    input                 go to state 4
    declaration           go to state 5
    type_specifier        go to state 6
    translation_unit      go to state 7
    external_declaration  go to state 8
    function_definition   go to state 9


State 1

   75 type_specifier: INT .

    $default  reduce using rule 75 (type_specifier)


State 2

   74 type_specifier: CHAR .

    $default  reduce using rule 74 (type_specifier)


State 3

   73 type_specifier: VOID .

    $default  reduce using rule 73 (type_specifier)


State 4

    0 $accept: input . $end

    $end  shift, and go to state 10


State 5

  119 external_declaration: declaration .

    $default  reduce using rule 119 (external_declaration)


State 6

   68 declaration: type_specifier . declarator_list ';'
   69 declarator_list: . init_declarator
   70                | . declarator_list ',' init_declarator
   71 init_declarator: . declarator
   72                | . declarator '=' initializer
   77 declarator: . direct_declarator
   78 direct_declarator: . ID
   79                  | . ID '[' INT_VAL ']'
   80                  | . ID '[' ']'
   81                  | . ID '(' parameter_list ')'
   82                  | . ID '(' ')'
  120 function_definition: type_specifier . declarator compound_statement

    ID  shift, and go to state 11

    declarator_list    go to state 12
    init_declarator    go to state 13
    declarator         go to state 14
    direct_declarator  go to state 15


State 7

    1 input: translation_unit .  [$end]
   68 declaration: . type_specifier declarator_list ';'
   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
  117 translation_unit: translation_unit . external_declaration
  118 external_declaration: . function_definition
  119                     | . declaration
  120 function_definition: . type_specifier declarator compound_statement

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 1 (input)

    declaration           go to state 5
    type_specifier        go to state 6
    external_declaration  go to state 16
    function_definition   go to state 9


State 8

  116 translation_unit: external_declaration .

    $default  reduce using rule 116 (translation_unit)


State 9

  118 external_declaration: function_definition .

    $default  reduce using rule 118 (external_declaration)


State 10

    0 $accept: input $end .

    $default  accept


State 11

   78 direct_declarator: ID .  [')', '=', ',', ';', '{']
   79                  | ID . '[' INT_VAL ']'
   80                  | ID . '[' ']'
   81                  | ID . '(' parameter_list ')'
   82                  | ID . '(' ')'

    '('  shift, and go to state 17
    '['  shift, and go to state 18

    $default  reduce using rule 78 (direct_declarator)


State 12

   68 declaration: type_specifier declarator_list . ';'
   70 declarator_list: declarator_list . ',' init_declarator

    ','  shift, and go to state 19
    ';'  shift, and go to state 20


State 13

   69 declarator_list: init_declarator .

    $default  reduce using rule 69 (declarator_list)


State 14

   71 init_declarator: declarator .  [',', ';']
   72                | declarator . '=' initializer
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  120 function_definition: type_specifier declarator . compound_statement

    '='  shift, and go to state 21
    '{'  shift, and go to state 22

    $default  reduce using rule 71 (init_declarator)

    compound_statement  go to state 23


State 15

   77 declarator: direct_declarator .

    $default  reduce using rule 77 (declarator)


State 16

  117 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 117 (translation_unit)


State 17

   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
   81 direct_declarator: ID '(' . parameter_list ')'
   82                  | ID '(' . ')'
   83 parameter_list: . parameter_declaration
   84               | . parameter_list ',' parameter_declaration
   85 parameter_declaration: . type_specifier declarator
   86                      | . type_specifier

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3
    ')'   shift, and go to state 24

    type_specifier         go to state 25
    parameter_list         go to state 26
    parameter_declaration  go to state 27


State 18

   79 direct_declarator: ID '[' . INT_VAL ']'
   80                  | ID '[' . ']'

    INT_VAL  shift, and go to state 28
    ']'      shift, and go to state 29


State 19

   70 declarator_list: declarator_list ',' . init_declarator
   71 init_declarator: . declarator
   72                | . declarator '=' initializer
   77 declarator: . direct_declarator
   78 direct_declarator: . ID
   79                  | . ID '[' INT_VAL ']'
   80                  | . ID '[' ']'
   81                  | . ID '(' parameter_list ')'
   82                  | . ID '(' ')'

    ID  shift, and go to state 11

    init_declarator    go to state 30
    declarator         go to state 31
    direct_declarator  go to state 15


State 20

   68 declaration: type_specifier declarator_list ';' .

    $default  reduce using rule 68 (declaration)


State 21

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   72 init_declarator: declarator '=' . initializer
   87 initializer: . expression
   88            | . '{' initializer_list '}'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 44

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 60
    initializer                go to state 61


State 22

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   68 declaration: . type_specifier declarator_list ';'
   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  100                   | '{' . '}'
  101                   | . '{' statement_list '}'
  101                   | '{' . statement_list '}'
  102                   | . '{' declaration_list '}'
  102                   | '{' . declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  103                   | '{' . declaration_list statement_list '}'
  104 declaration_list: . declaration
  105                 | . declaration_list declaration
  106 statement_list: . statement
  107               | . statement_list statement
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    VOID      shift, and go to state 3
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22
    '}'       shift, and go to state 68

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    declaration                go to state 70
    type_specifier             go to state 71
    statement                  go to state 72
    built_in_func              go to state 73
    compound_statement         go to state 74
    declaration_list           go to state 75
    statement_list             go to state 76
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 23

  120 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 120 (function_definition)


State 24

   82 direct_declarator: ID '(' ')' .

    $default  reduce using rule 82 (direct_declarator)


State 25

   77 declarator: . direct_declarator
   78 direct_declarator: . ID
   79                  | . ID '[' INT_VAL ']'
   80                  | . ID '[' ']'
   81                  | . ID '(' parameter_list ')'
   82                  | . ID '(' ')'
   85 parameter_declaration: type_specifier . declarator
   86                      | type_specifier .  [')', ',']

    ID  shift, and go to state 11

    $default  reduce using rule 86 (parameter_declaration)

    declarator         go to state 81
    direct_declarator  go to state 15


State 26

   81 direct_declarator: ID '(' parameter_list . ')'
   84 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 82
    ','  shift, and go to state 83


State 27

   83 parameter_list: parameter_declaration .

    $default  reduce using rule 83 (parameter_list)


State 28

   79 direct_declarator: ID '[' INT_VAL . ']'

    ']'  shift, and go to state 84


State 29

   80 direct_declarator: ID '[' ']' .

    $default  reduce using rule 80 (direct_declarator)


State 30

   70 declarator_list: declarator_list ',' init_declarator .

    $default  reduce using rule 70 (declarator_list)


State 31

   71 init_declarator: declarator .  [',', ';']
   72                | declarator . '=' initializer

    '='  shift, and go to state 21

    $default  reduce using rule 71 (init_declarator)


State 32

    2 primary_expression: ID .  [LE, GE, NE, EQ, LS, RS, OR, AND, PLE, SBE, MLE, DVE, MDE, RSE, LSE, DEC, INC, XRE, ORE, ANE, ')', ']', '-', '*', '/', '%', '+', '<', '>', '&', '^', '|', '?', ':', '=', ',', ';', '}']
    7 postfix_expression: ID . '[' expression ']'
    8                   | ID . '(' ')'
    9                   | ID . '(' argument_list ')'

    '('  shift, and go to state 85
    '['  shift, and go to state 86

    $default  reduce using rule 2 (primary_expression)


State 33

    3 primary_expression: INT_VAL .

    $default  reduce using rule 3 (primary_expression)


State 34

    4 primary_expression: CHAR_VAL .

    $default  reduce using rule 4 (primary_expression)


State 35

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   19                 | SIZEOF . unary_expression
   20                 | . SIZEOF '(' type_name ')'
   20                 | SIZEOF . '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 87
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 88


State 36

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   15                 | DEC . unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 89


State 37

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   14                 | INC . unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 90


State 38

   22 unary_expression: TIME . '(' INT_VAL ')'

    '('  shift, and go to state 91


State 39

   21 unary_expression: RAND . '(' ')'

    '('  shift, and go to state 92


State 40

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    5                   | '(' . expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 93


State 41

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   16                 | '-' . unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 94


State 42

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   17                 | '~' . unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 95


State 43

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   18                 | '!' . unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 96


State 44

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   88 initializer: '{' . initializer_list '}'
   89 initializer_list: . expression
   90                 | . initializer_list ',' expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 97
    initializer_list           go to state 98


State 45

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


State 46

   10 postfix_expression: postfix_expression . INC
   11                   | postfix_expression . DEC
   13 unary_expression: postfix_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, PLE, SBE, MLE, DVE, MDE, RSE, LSE, XRE, ORE, ANE, ')', ']', '-', '*', '/', '%', '+', '<', '>', '&', '^', '|', '?', ':', '=', ',', ';', '}']

    DEC  shift, and go to state 99
    INC  shift, and go to state 100

    $default  reduce using rule 13 (unary_expression)


State 47

   23 multiplicative_expression: unary_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '-', '*', '/', '%', '+', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']
   53 assignment_expression: unary_expression . '=' expression
   54                      | unary_expression . PLE expression
   55                      | unary_expression . SBE expression
   56                      | unary_expression . MLE expression
   57                      | unary_expression . DVE expression
   58                      | unary_expression . MDE expression
   59                      | unary_expression . RSE expression
   60                      | unary_expression . LSE expression
   61                      | unary_expression . XRE expression
   62                      | unary_expression . ORE expression
   63                      | unary_expression . ANE expression

    PLE  shift, and go to state 101
    SBE  shift, and go to state 102
    MLE  shift, and go to state 103
    DVE  shift, and go to state 104
    MDE  shift, and go to state 105
    RSE  shift, and go to state 106
    LSE  shift, and go to state 107
    XRE  shift, and go to state 108
    ORE  shift, and go to state 109
    ANE  shift, and go to state 110
    '='  shift, and go to state 111

    $default  reduce using rule 23 (multiplicative_expression)


State 48

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   27 additive_expression: multiplicative_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '-', '+', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 27 (additive_expression)


State 49

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   30 shift_expression: additive_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '-'  shift, and go to state 115
    '+'  shift, and go to state 116

    $default  reduce using rule 30 (shift_expression)


State 50

   31 shift_expression: shift_expression . LS additive_expression
   32                 | shift_expression . RS additive_expression
   33 relational_expression: shift_expression .  [LE, GE, NE, EQ, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    LS  shift, and go to state 117
    RS  shift, and go to state 118

    $default  reduce using rule 33 (relational_expression)


State 51

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE shift_expression
   37                      | relational_expression . GE shift_expression
   38 equality_expression: relational_expression .  [NE, EQ, OR, AND, ')', ']', '&', '^', '|', '?', ':', ',', ';', '}']

    LE   shift, and go to state 119
    GE   shift, and go to state 120
    '<'  shift, and go to state 121
    '>'  shift, and go to state 122

    $default  reduce using rule 38 (equality_expression)


State 52

   39 equality_expression: equality_expression . EQ relational_expression
   40                    | equality_expression . NE relational_expression
   41 and_expression: equality_expression .  [OR, AND, ')', ']', '&', '^', '|', '?', ':', ',', ';', '}']

    NE  shift, and go to state 123
    EQ  shift, and go to state 124

    $default  reduce using rule 41 (and_expression)


State 53

   42 and_expression: and_expression . '&' equality_expression
   43 exclusive_or_expression: and_expression .  [OR, AND, ')', ']', '^', '|', '?', ':', ',', ';', '}']

    '&'  shift, and go to state 125

    $default  reduce using rule 43 (exclusive_or_expression)


State 54

   44 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   45 inclusive_or_expression: exclusive_or_expression .  [OR, AND, ')', ']', '|', '?', ':', ',', ';', '}']

    '^'  shift, and go to state 126

    $default  reduce using rule 45 (inclusive_or_expression)


State 55

   46 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   47 logical_and_expression: inclusive_or_expression .  [OR, AND, ')', ']', '?', ':', ',', ';', '}']

    '|'  shift, and go to state 127

    $default  reduce using rule 47 (logical_and_expression)


State 56

   48 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   49 logical_or_expression: logical_and_expression .  [OR, ')', ']', '?', ':', ',', ';', '}']

    AND  shift, and go to state 128

    $default  reduce using rule 49 (logical_or_expression)


State 57

   50 logical_or_expression: logical_or_expression . OR logical_and_expression
   51 conditional_expression: logical_or_expression .  [')', ']', ':', ',', ';', '}']
   52                       | logical_or_expression . '?' expression ':' conditional_expression

    OR   shift, and go to state 129
    '?'  shift, and go to state 130

    $default  reduce using rule 51 (conditional_expression)


State 58

   65 expression: conditional_expression .

    $default  reduce using rule 65 (expression)


State 59

   64 expression: assignment_expression .

    $default  reduce using rule 64 (expression)


State 60

   87 initializer: expression .

    $default  reduce using rule 87 (initializer)


State 61

   72 init_declarator: declarator '=' initializer .

    $default  reduce using rule 72 (init_declarator)


State 62

  110 selection_statement: IF . '(' expression ')' statement
  111                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 131


State 63

  113 iteration_statement: FOR . '(' optional_expression ';' optional_expression ';' optional_expression ')' statement

    '('  shift, and go to state 132


State 64

  112 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 133


State 65

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  114 jump_statement: RETURN . ';'
  115               | RETURN . expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    ';'       shift, and go to state 134

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 135


State 66

   98 built_in_func: PRINTF . '(' STRING_VAL ')'
   99              | PRINTF . '(' STRING_VAL ',' expression_list ')'

    '('  shift, and go to state 136


State 67

   97 built_in_func: SRAND . '(' expression ')'

    '('  shift, and go to state 137


State 68

  100 compound_statement: '{' '}' .

    $default  reduce using rule 100 (compound_statement)


State 69

  108 optional_expression: expression .

    $default  reduce using rule 108 (optional_expression)


State 70

  104 declaration_list: declaration .

    $default  reduce using rule 104 (declaration_list)


State 71

   68 declaration: type_specifier . declarator_list ';'
   69 declarator_list: . init_declarator
   70                | . declarator_list ',' init_declarator
   71 init_declarator: . declarator
   72                | . declarator '=' initializer
   77 declarator: . direct_declarator
   78 direct_declarator: . ID
   79                  | . ID '[' INT_VAL ']'
   80                  | . ID '[' ']'
   81                  | . ID '(' parameter_list ')'
   82                  | . ID '(' ')'

    ID  shift, and go to state 11

    declarator_list    go to state 12
    init_declarator    go to state 13
    declarator         go to state 31
    direct_declarator  go to state 15


State 72

  106 statement_list: statement .

    $default  reduce using rule 106 (statement_list)


State 73

   96 statement: built_in_func . ';'

    ';'  shift, and go to state 138


State 74

   95 statement: compound_statement .

    $default  reduce using rule 95 (statement)


State 75

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   68 declaration: . type_specifier declarator_list ';'
   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  102                   | '{' declaration_list . '}'
  103                   | . '{' declaration_list statement_list '}'
  103                   | '{' declaration_list . statement_list '}'
  105 declaration_list: declaration_list . declaration
  106 statement_list: . statement
  107               | . statement_list statement
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    VOID      shift, and go to state 3
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22
    '}'       shift, and go to state 139

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    declaration                go to state 140
    type_specifier             go to state 71
    statement                  go to state 72
    built_in_func              go to state 73
    compound_statement         go to state 74
    statement_list             go to state 141
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 76

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  101                   | '{' statement_list . '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  107 statement_list: statement_list . statement
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22
    '}'       shift, and go to state 142

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 143
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 77

   91 statement: optional_expression . ';'

    ';'  shift, and go to state 144


State 78

   92 statement: selection_statement .

    $default  reduce using rule 92 (statement)


State 79

   93 statement: iteration_statement .

    $default  reduce using rule 93 (statement)


State 80

   94 statement: jump_statement .

    $default  reduce using rule 94 (statement)


State 81

   85 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 85 (parameter_declaration)


State 82

   81 direct_declarator: ID '(' parameter_list ')' .

    $default  reduce using rule 81 (direct_declarator)


State 83

   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
   84 parameter_list: parameter_list ',' . parameter_declaration
   85 parameter_declaration: . type_specifier declarator
   86                      | . type_specifier

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 25
    parameter_declaration  go to state 145


State 84

   79 direct_declarator: ID '[' INT_VAL ']' .

    $default  reduce using rule 79 (direct_declarator)


State 85

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    8                   | ID '(' . ')'
    9                   | . ID '(' argument_list ')'
    9                   | ID '(' . argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   12 argument_list: . expression_list
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   66 expression_list: . expression
   67                | . expression_list ',' expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    ')'       shift, and go to state 146
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    argument_list              go to state 147
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 148
    expression_list            go to state 149


State 86

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    7                   | ID '[' . expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 150


State 87

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    5                   | '(' . expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   20                 | SIZEOF '(' . type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   73 type_specifier: . VOID
   74               | . CHAR
   75               | . INT
   76 type_name: . type_specifier

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    VOID      shift, and go to state 3
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 93
    type_specifier             go to state 151
    type_name                  go to state 152


State 88

   19 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 89

   15 unary_expression: DEC unary_expression .

    $default  reduce using rule 15 (unary_expression)


State 90

   14 unary_expression: INC unary_expression .

    $default  reduce using rule 14 (unary_expression)


State 91

   22 unary_expression: TIME '(' . INT_VAL ')'

    INT_VAL  shift, and go to state 153


State 92

   21 unary_expression: RAND '(' . ')'

    ')'  shift, and go to state 154


State 93

    5 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 155


State 94

   16 unary_expression: '-' unary_expression .

    $default  reduce using rule 16 (unary_expression)


State 95

   17 unary_expression: '~' unary_expression .

    $default  reduce using rule 17 (unary_expression)


State 96

   18 unary_expression: '!' unary_expression .

    $default  reduce using rule 18 (unary_expression)


State 97

   89 initializer_list: expression .

    $default  reduce using rule 89 (initializer_list)


State 98

   88 initializer: '{' initializer_list . '}'
   90 initializer_list: initializer_list . ',' expression

    ','  shift, and go to state 156
    '}'  shift, and go to state 157


State 99

   11 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 11 (postfix_expression)


State 100

   10 postfix_expression: postfix_expression INC .

    $default  reduce using rule 10 (postfix_expression)


State 101

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   54                      | unary_expression PLE . expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 158


State 102

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   55                      | unary_expression SBE . expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 159


State 103

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   56                      | unary_expression MLE . expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 160


State 104

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   57                      | unary_expression DVE . expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 161


State 105

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   58                      | unary_expression MDE . expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 162


State 106

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   59                      | unary_expression RSE . expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 163


State 107

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   60                      | unary_expression LSE . expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 164


State 108

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   61                      | unary_expression XRE . expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 165


State 109

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   62                      | unary_expression ORE . expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 166


State 110

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   63                      | unary_expression ANE . expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 167


State 111

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   53                      | unary_expression '=' . expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 168


State 112

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   24 multiplicative_expression: multiplicative_expression '*' . unary_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 169


State 113

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   25 multiplicative_expression: multiplicative_expression '/' . unary_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 170


State 114

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   26 multiplicative_expression: multiplicative_expression '%' . unary_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression  go to state 45
    postfix_expression  go to state 46
    unary_expression    go to state 171


State 115

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   29 additive_expression: additive_expression '-' . multiplicative_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 173


State 116

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   28 additive_expression: additive_expression '+' . multiplicative_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 174


State 117

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   31 shift_expression: shift_expression LS . additive_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 175


State 118

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   32 shift_expression: shift_expression RS . additive_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 176


State 119

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   36 relational_expression: relational_expression LE . shift_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 177


State 120

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   37 relational_expression: relational_expression GE . shift_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 178


State 121

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   34 relational_expression: relational_expression '<' . shift_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 179


State 122

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   35 relational_expression: relational_expression '>' . shift_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 180


State 123

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   40 equality_expression: equality_expression NE . relational_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 181


State 124

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   39 equality_expression: equality_expression EQ . relational_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 182


State 125

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   42 and_expression: and_expression '&' . equality_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 183


State 126

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   44 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 184


State 127

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   46 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 185


State 128

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   48 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 186


State 129

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   50 logical_or_expression: logical_or_expression OR . logical_and_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 187


State 130

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   52                       | logical_or_expression '?' . expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 188


State 131

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  110 selection_statement: IF '(' . expression ')' statement
  111                    | IF '(' . expression ')' statement ELSE statement

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 189


State 132

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  108 optional_expression: . expression
  109                    | . %empty  [';']
  113 iteration_statement: FOR '(' . optional_expression ';' optional_expression ';' optional_expression ')' statement

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    optional_expression        go to state 190


State 133

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  112 iteration_statement: WHILE '(' . expression ')' statement

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 191


State 134

  114 jump_statement: RETURN ';' .

    $default  reduce using rule 114 (jump_statement)


State 135

  115 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 192


State 136

   98 built_in_func: PRINTF '(' . STRING_VAL ')'
   99              | PRINTF '(' . STRING_VAL ',' expression_list ')'

    STRING_VAL  shift, and go to state 193


State 137

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   97 built_in_func: SRAND '(' . expression ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 194


State 138

   96 statement: built_in_func ';' .

    $default  reduce using rule 96 (statement)


State 139

  102 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 102 (compound_statement)


State 140

  105 declaration_list: declaration_list declaration .

    $default  reduce using rule 105 (declaration_list)


State 141

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  103                   | '{' declaration_list statement_list . '}'
  107 statement_list: statement_list . statement
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22
    '}'       shift, and go to state 195

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 143
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 142

  101 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 101 (compound_statement)


State 143

  107 statement_list: statement_list statement .

    $default  reduce using rule 107 (statement_list)


State 144

   91 statement: optional_expression ';' .

    $default  reduce using rule 91 (statement)


State 145

   84 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 84 (parameter_list)


State 146

    8 postfix_expression: ID '(' ')' .

    $default  reduce using rule 8 (postfix_expression)


State 147

    9 postfix_expression: ID '(' argument_list . ')'

    ')'  shift, and go to state 196


State 148

   66 expression_list: expression .

    $default  reduce using rule 66 (expression_list)


State 149

   12 argument_list: expression_list .  [')']
   67 expression_list: expression_list . ',' expression

    ','  shift, and go to state 197

    $default  reduce using rule 12 (argument_list)


State 150

    7 postfix_expression: ID '[' expression . ']'

    ']'  shift, and go to state 198


State 151

   76 type_name: type_specifier .

    $default  reduce using rule 76 (type_name)


State 152

   20 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 199


State 153

   22 unary_expression: TIME '(' INT_VAL . ')'

    ')'  shift, and go to state 200


State 154

   21 unary_expression: RAND '(' ')' .

    $default  reduce using rule 21 (unary_expression)


State 155

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


State 156

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   90 initializer_list: initializer_list ',' . expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 201


State 157

   88 initializer: '{' initializer_list '}' .

    $default  reduce using rule 88 (initializer)


State 158

   54 assignment_expression: unary_expression PLE expression .

    $default  reduce using rule 54 (assignment_expression)


State 159

   55 assignment_expression: unary_expression SBE expression .

    $default  reduce using rule 55 (assignment_expression)


State 160

   56 assignment_expression: unary_expression MLE expression .

    $default  reduce using rule 56 (assignment_expression)


State 161

   57 assignment_expression: unary_expression DVE expression .

    $default  reduce using rule 57 (assignment_expression)


State 162

   58 assignment_expression: unary_expression MDE expression .

    $default  reduce using rule 58 (assignment_expression)


State 163

   59 assignment_expression: unary_expression RSE expression .

    $default  reduce using rule 59 (assignment_expression)


State 164

   60 assignment_expression: unary_expression LSE expression .

    $default  reduce using rule 60 (assignment_expression)


State 165

   61 assignment_expression: unary_expression XRE expression .

    $default  reduce using rule 61 (assignment_expression)


State 166

   62 assignment_expression: unary_expression ORE expression .

    $default  reduce using rule 62 (assignment_expression)


State 167

   63 assignment_expression: unary_expression ANE expression .

    $default  reduce using rule 63 (assignment_expression)


State 168

   53 assignment_expression: unary_expression '=' expression .

    $default  reduce using rule 53 (assignment_expression)


State 169

   24 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


State 170

   25 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


State 171

   26 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 172

   23 multiplicative_expression: unary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


State 173

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '-' multiplicative_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '-', '+', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 29 (additive_expression)


State 174

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: additive_expression '+' multiplicative_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '-', '+', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 28 (additive_expression)


State 175

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   31 shift_expression: shift_expression LS additive_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '-'  shift, and go to state 115
    '+'  shift, and go to state 116

    $default  reduce using rule 31 (shift_expression)


State 176

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   32 shift_expression: shift_expression RS additive_expression .  [LE, GE, NE, EQ, LS, RS, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    '-'  shift, and go to state 115
    '+'  shift, and go to state 116

    $default  reduce using rule 32 (shift_expression)


State 177

   31 shift_expression: shift_expression . LS additive_expression
   32                 | shift_expression . RS additive_expression
   36 relational_expression: relational_expression LE shift_expression .  [LE, GE, NE, EQ, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    LS  shift, and go to state 117
    RS  shift, and go to state 118

    $default  reduce using rule 36 (relational_expression)


State 178

   31 shift_expression: shift_expression . LS additive_expression
   32                 | shift_expression . RS additive_expression
   37 relational_expression: relational_expression GE shift_expression .  [LE, GE, NE, EQ, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    LS  shift, and go to state 117
    RS  shift, and go to state 118

    $default  reduce using rule 37 (relational_expression)


State 179

   31 shift_expression: shift_expression . LS additive_expression
   32                 | shift_expression . RS additive_expression
   34 relational_expression: relational_expression '<' shift_expression .  [LE, GE, NE, EQ, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    LS  shift, and go to state 117
    RS  shift, and go to state 118

    $default  reduce using rule 34 (relational_expression)


State 180

   31 shift_expression: shift_expression . LS additive_expression
   32                 | shift_expression . RS additive_expression
   35 relational_expression: relational_expression '>' shift_expression .  [LE, GE, NE, EQ, OR, AND, ')', ']', '<', '>', '&', '^', '|', '?', ':', ',', ';', '}']

    LS  shift, and go to state 117
    RS  shift, and go to state 118

    $default  reduce using rule 35 (relational_expression)


State 181

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE shift_expression
   37                      | relational_expression . GE shift_expression
   40 equality_expression: equality_expression NE relational_expression .  [NE, EQ, OR, AND, ')', ']', '&', '^', '|', '?', ':', ',', ';', '}']

    LE   shift, and go to state 119
    GE   shift, and go to state 120
    '<'  shift, and go to state 121
    '>'  shift, and go to state 122

    $default  reduce using rule 40 (equality_expression)


State 182

   34 relational_expression: relational_expression . '<' shift_expression
   35                      | relational_expression . '>' shift_expression
   36                      | relational_expression . LE shift_expression
   37                      | relational_expression . GE shift_expression
   39 equality_expression: equality_expression EQ relational_expression .  [NE, EQ, OR, AND, ')', ']', '&', '^', '|', '?', ':', ',', ';', '}']

    LE   shift, and go to state 119
    GE   shift, and go to state 120
    '<'  shift, and go to state 121
    '>'  shift, and go to state 122

    $default  reduce using rule 39 (equality_expression)


State 183

   39 equality_expression: equality_expression . EQ relational_expression
   40                    | equality_expression . NE relational_expression
   42 and_expression: and_expression '&' equality_expression .  [OR, AND, ')', ']', '&', '^', '|', '?', ':', ',', ';', '}']

    NE  shift, and go to state 123
    EQ  shift, and go to state 124

    $default  reduce using rule 42 (and_expression)


State 184

   42 and_expression: and_expression . '&' equality_expression
   44 exclusive_or_expression: exclusive_or_expression '^' and_expression .  [OR, AND, ')', ']', '^', '|', '?', ':', ',', ';', '}']

    '&'  shift, and go to state 125

    $default  reduce using rule 44 (exclusive_or_expression)


State 185

   44 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   46 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .  [OR, AND, ')', ']', '|', '?', ':', ',', ';', '}']

    '^'  shift, and go to state 126

    $default  reduce using rule 46 (inclusive_or_expression)


State 186

   46 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   48 logical_and_expression: logical_and_expression AND inclusive_or_expression .  [OR, AND, ')', ']', '?', ':', ',', ';', '}']

    '|'  shift, and go to state 127

    $default  reduce using rule 48 (logical_and_expression)


State 187

   48 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   50 logical_or_expression: logical_or_expression OR logical_and_expression .  [OR, ')', ']', '?', ':', ',', ';', '}']

    AND  shift, and go to state 128

    $default  reduce using rule 50 (logical_or_expression)


State 188

   52 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 202


State 189

  110 selection_statement: IF '(' expression . ')' statement
  111                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 203


State 190

  113 iteration_statement: FOR '(' optional_expression . ';' optional_expression ';' optional_expression ')' statement

    ';'  shift, and go to state 204


State 191

  112 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 205


State 192

  115 jump_statement: RETURN expression ';' .

    $default  reduce using rule 115 (jump_statement)


State 193

   98 built_in_func: PRINTF '(' STRING_VAL . ')'
   99              | PRINTF '(' STRING_VAL . ',' expression_list ')'

    ')'  shift, and go to state 206
    ','  shift, and go to state 207


State 194

   97 built_in_func: SRAND '(' expression . ')'

    ')'  shift, and go to state 208


State 195

  103 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 103 (compound_statement)


State 196

    9 postfix_expression: ID '(' argument_list ')' .

    $default  reduce using rule 9 (postfix_expression)


State 197

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   67 expression_list: expression_list ',' . expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 209


State 198

    7 postfix_expression: ID '[' expression ']' .

    $default  reduce using rule 7 (postfix_expression)


State 199

   20 unary_expression: SIZEOF '(' type_name ')' .

    $default  reduce using rule 20 (unary_expression)


State 200

   22 unary_expression: TIME '(' INT_VAL ')' .

    $default  reduce using rule 22 (unary_expression)


State 201

   90 initializer_list: initializer_list ',' expression .

    $default  reduce using rule 90 (initializer_list)


State 202

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   52                       | logical_or_expression '?' expression ':' . conditional_expression

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 172
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 210


State 203

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  110                    | IF '(' expression ')' . statement
  111                    | . IF '(' expression ')' statement ELSE statement
  111                    | IF '(' expression ')' . statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 211
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 204

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  108 optional_expression: . expression
  109                    | . %empty  [';']
  113 iteration_statement: FOR '(' optional_expression ';' . optional_expression ';' optional_expression ')' statement

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    optional_expression        go to state 212


State 205

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  112                    | WHILE '(' expression ')' . statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 213
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 206

   98 built_in_func: PRINTF '(' STRING_VAL ')' .

    $default  reduce using rule 98 (built_in_func)


State 207

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   66 expression_list: . expression
   67                | . expression_list ',' expression
   99 built_in_func: PRINTF '(' STRING_VAL ',' . expression_list ')'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 148
    expression_list            go to state 214


State 208

   97 built_in_func: SRAND '(' expression ')' .

    $default  reduce using rule 97 (built_in_func)


State 209

   67 expression_list: expression_list ',' expression .

    $default  reduce using rule 67 (expression_list)


State 210

   52 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 52 (conditional_expression)


State 211

  110 selection_statement: IF '(' expression ')' statement .  [ID, INT_VAL, CHAR_VAL, IF, ELSE, FOR, WHILE, RETURN, SIZEOF, DEC, INC, PRINTF, TIME, SRAND, RAND, '(', '-', '~', '!', ';', '{', '}']
  111                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 215

    ELSE      [reduce using rule 110 (selection_statement)]
    $default  reduce using rule 110 (selection_statement)


State 212

  113 iteration_statement: FOR '(' optional_expression ';' optional_expression . ';' optional_expression ')' statement

    ';'  shift, and go to state 216


State 213

  112 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 112 (iteration_statement)


State 214

   67 expression_list: expression_list . ',' expression
   99 built_in_func: PRINTF '(' STRING_VAL ',' expression_list . ')'

    ')'  shift, and go to state 217
    ','  shift, and go to state 197


State 215

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  111                    | IF '(' expression ')' statement ELSE . statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 218
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 216

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
  108 optional_expression: . expression
  109                    | . %empty  [')']
  113 iteration_statement: FOR '(' optional_expression ';' optional_expression ';' . optional_expression ')' statement

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    TIME      shift, and go to state 38
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    optional_expression        go to state 219


State 217

   99 built_in_func: PRINTF '(' STRING_VAL ',' expression_list ')' .

    $default  reduce using rule 99 (built_in_func)


State 218

  111 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 111 (selection_statement)


State 219

  113 iteration_statement: FOR '(' optional_expression ';' optional_expression ';' optional_expression . ')' statement

    ')'  shift, and go to state 220


State 220

    2 primary_expression: . ID
    3                   | . INT_VAL
    4                   | . CHAR_VAL
    5                   | . '(' expression ')'
    6 postfix_expression: . primary_expression
    7                   | . ID '[' expression ']'
    8                   | . ID '(' ')'
    9                   | . ID '(' argument_list ')'
   10                   | . postfix_expression INC
   11                   | . postfix_expression DEC
   13 unary_expression: . postfix_expression
   14                 | . INC unary_expression
   15                 | . DEC unary_expression
   16                 | . '-' unary_expression
   17                 | . '~' unary_expression
   18                 | . '!' unary_expression
   19                 | . SIZEOF unary_expression
   20                 | . SIZEOF '(' type_name ')'
   21                 | . RAND '(' ')'
   22                 | . TIME '(' INT_VAL ')'
   23 multiplicative_expression: . unary_expression
   24                          | . multiplicative_expression '*' unary_expression
   25                          | . multiplicative_expression '/' unary_expression
   26                          | . multiplicative_expression '%' unary_expression
   27 additive_expression: . multiplicative_expression
   28                    | . additive_expression '+' multiplicative_expression
   29                    | . additive_expression '-' multiplicative_expression
   30 shift_expression: . additive_expression
   31                 | . shift_expression LS additive_expression
   32                 | . shift_expression RS additive_expression
   33 relational_expression: . shift_expression
   34                      | . relational_expression '<' shift_expression
   35                      | . relational_expression '>' shift_expression
   36                      | . relational_expression LE shift_expression
   37                      | . relational_expression GE shift_expression
   38 equality_expression: . relational_expression
   39                    | . equality_expression EQ relational_expression
   40                    | . equality_expression NE relational_expression
   41 and_expression: . equality_expression
   42               | . and_expression '&' equality_expression
   43 exclusive_or_expression: . and_expression
   44                        | . exclusive_or_expression '^' and_expression
   45 inclusive_or_expression: . exclusive_or_expression
   46                        | . inclusive_or_expression '|' exclusive_or_expression
   47 logical_and_expression: . inclusive_or_expression
   48                       | . logical_and_expression AND inclusive_or_expression
   49 logical_or_expression: . logical_and_expression
   50                      | . logical_or_expression OR logical_and_expression
   51 conditional_expression: . logical_or_expression
   52                       | . logical_or_expression '?' expression ':' conditional_expression
   53 assignment_expression: . unary_expression '=' expression
   54                      | . unary_expression PLE expression
   55                      | . unary_expression SBE expression
   56                      | . unary_expression MLE expression
   57                      | . unary_expression DVE expression
   58                      | . unary_expression MDE expression
   59                      | . unary_expression RSE expression
   60                      | . unary_expression LSE expression
   61                      | . unary_expression XRE expression
   62                      | . unary_expression ORE expression
   63                      | . unary_expression ANE expression
   64 expression: . assignment_expression
   65           | . conditional_expression
   91 statement: . optional_expression ';'
   92          | . selection_statement
   93          | . iteration_statement
   94          | . jump_statement
   95          | . compound_statement
   96          | . built_in_func ';'
   97 built_in_func: . SRAND '(' expression ')'
   98              | . PRINTF '(' STRING_VAL ')'
   99              | . PRINTF '(' STRING_VAL ',' expression_list ')'
  100 compound_statement: . '{' '}'
  101                   | . '{' statement_list '}'
  102                   | . '{' declaration_list '}'
  103                   | . '{' declaration_list statement_list '}'
  108 optional_expression: . expression
  109                    | . %empty  [';']
  110 selection_statement: . IF '(' expression ')' statement
  111                    | . IF '(' expression ')' statement ELSE statement
  112 iteration_statement: . WHILE '(' expression ')' statement
  113                    | . FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement
  113                    | FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' . statement
  114 jump_statement: . RETURN ';'
  115               | . RETURN expression ';'

    ID        shift, and go to state 32
    INT_VAL   shift, and go to state 33
    CHAR_VAL  shift, and go to state 34
    IF        shift, and go to state 62
    FOR       shift, and go to state 63
    WHILE     shift, and go to state 64
    RETURN    shift, and go to state 65
    SIZEOF    shift, and go to state 35
    DEC       shift, and go to state 36
    INC       shift, and go to state 37
    PRINTF    shift, and go to state 66
    TIME      shift, and go to state 38
    SRAND     shift, and go to state 67
    RAND      shift, and go to state 39
    '('       shift, and go to state 40
    '-'       shift, and go to state 41
    '~'       shift, and go to state 42
    '!'       shift, and go to state 43
    '{'       shift, and go to state 22

    $default  reduce using rule 109 (optional_expression)

    primary_expression         go to state 45
    postfix_expression         go to state 46
    unary_expression           go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59
    expression                 go to state 69
    statement                  go to state 221
    built_in_func              go to state 73
    compound_statement         go to state 74
    optional_expression        go to state 77
    selection_statement        go to state 78
    iteration_statement        go to state 79
    jump_statement             go to state 80


State 221

  113 iteration_statement: FOR '(' optional_expression ';' optional_expression ';' optional_expression ')' statement .

    $default  reduce using rule 113 (iteration_statement)
